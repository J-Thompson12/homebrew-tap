# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Gitops < Formula
  desc "GitOps support for Kubernetes"
  homepage "https://docs.gitops.weave.works/docs/getting-started"
  version "0.3.13-rc0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/J-Thompson12/weave-gitops/releases/download/v0.3.13-rc0/gitops_0.3.13-rc0_darwin_amd64.tar.gz"
      sha256 "6b4bef3310f5706073b943d36732c751f9f9dc2752bb7bc912591c4c27d731fd"

      def install
        bin.install "gitops"

        # Install bash completion
        output = Utils.popen_read("#{bin}/gitops completion bash")
        (bash_completion/"gitops").write output

        # Install zsh completion
        output = Utils.popen_read("#{bin}/gitops completion zsh")
        (zsh_completion/"_gitops").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/J-Thompson12/weave-gitops/releases/download/v0.3.13-rc0/gitops_0.3.13-rc0_linux_arm64.tar.gz"
      sha256 "8dec94afc0d8cc97ec2bebd90275929bce787c3d9cec193781a240347da18770"

      def install
        bin.install "gitops"

        # Install bash completion
        output = Utils.popen_read("#{bin}/gitops completion bash")
        (bash_completion/"gitops").write output

        # Install zsh completion
        output = Utils.popen_read("#{bin}/gitops completion zsh")
        (zsh_completion/"_gitops").write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/J-Thompson12/weave-gitops/releases/download/v0.3.13-rc0/gitops_0.3.13-rc0_linux_amd64.tar.gz"
      sha256 "16f315b00d2d9d91a9da150cda9ecf3009da2307e71989f1170173c195532b8a"

      def install
        bin.install "gitops"

        # Install bash completion
        output = Utils.popen_read("#{bin}/gitops completion bash")
        (bash_completion/"gitops").write output

        # Install zsh completion
        output = Utils.popen_read("#{bin}/gitops completion zsh")
        (zsh_completion/"_gitops").write output
      end
    end
  end
end
